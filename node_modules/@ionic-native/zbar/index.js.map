{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/zbar/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,EAAE,MAAM,oBAAoB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA6E9C,wBAAiB;;;;IAEzC;;;;OAIG;;;;;;IAEH,mBAAI;;;;;cAAC,OAAoB,IAAkB,MAAM,CAAC,EAAE;;gBATrD,UAAU;;;QAQR,OAAO,EAAE;;;;oCAC0C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IARzC,IAAI;QARhB,MAAM,CAAC;YACN,UAAU,EAAE,MAAM;YAClB,MAAM,EAAE,uBAAuB;YAC/B,SAAS,EAAE,eAAe;YAC1B,IAAI,EAAE,kCAAkC;YACxC,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;SAC9B,CAAC;OAEW,IAAI,EAUhB;eAxFD;EA8E0B,iBAAiB;SAA9B,IAAI","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n\nexport interface ZBarOptions {\n  /**\n   * A string representing the title text (Android only).\n   * Default: \"Scan QR Code\"\n   */\n  text_title?: string;\n\n  /**\n   * A string representing the instruction text (Android only).\n   * Default: \"Please point your camera at the QR code.\"\n   */\n  text_instructions?: string;\n\n  /**\n   * A string defining the active camera when opening the scanner.\n   * Possible values: \"front\", \"back\"\n   * Default: \"back\"\n   */\n  camera?: string;\n\n  /**\n   * A string defining the state of the flash.\n   * Possible values: \"on\", \"off\", \"auto\"\n   * Default: \"auto\"\n   */\n  flash?: string;\n\n  /**\n   * A boolean to show or hide a line in the center of the scanner.\n   * Default: true\n   */\n  drawSight?: boolean;\n}\n\n/**\n * @name ZBar\n * @description\n * The ZBar Scanner Plugin allows you to scan 2d barcodes.\n *\n * Requires Cordova plugin: `cordova-plugin-cszbar`. For more info, please see the [zBar plugin docs](https://github.com/tjwoon/csZBar).\n *\n * @usage\n * ```typescript\n * import { ZBar, ZBarOptions } from '@ionic-native/zbar';\n *\n * constructor(private zbar: ZBar) { }\n *\n * ...\n *\n * let options: ZBarOptions = {\n *       flash: 'off',\n *       drawSight: false\n *     };\n *\n * this.zbar.scan(options)\n *    .then(result => {\n *       console.log(result); // Scanned code\n *    })\n *    .catch(error => {\n *       console.log(error); // Error message\n *    });\n *\n * ```\n *\n * @interfaces\n * ZBarOptions\n */\n@Plugin({\n  pluginName: 'ZBar',\n  plugin: 'cordova-plugin-cszbar',\n  pluginRef: 'cloudSky.zBar',\n  repo: 'https://github.com/tjwoon/csZBar',\n  platforms: ['Android', 'iOS']\n})\n@Injectable()\nexport class ZBar extends IonicNativePlugin {\n\n  /**\n   * Open the scanner\n   * @param options { ZBarOptions } Scan options\n   * @returns {Promise<any>} Returns a Promise that resolves with the scanned string, or rejects with an error.\n   */\n  @Cordova()\n  scan(options: ZBarOptions): Promise<any> { return; }\n\n}\n"]}